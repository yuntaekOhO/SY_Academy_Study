/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.63
 * Generated at: 2022-06-28 01:16:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch02_002dnestedObject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class s14_005forderForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>주문서</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("    h2{\r\n");
      out.write("    	text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("	table{\r\n");
      out.write("		border-collapse:collapse;\r\n");
      out.write("		border:1px solid gray;\r\n");
      out.write("		margin:0 auto;\r\n");
      out.write("	}\r\n");
      out.write("	td{\r\n");
      out.write("		border:1px solid gray;\r\n");
      out.write("		height:30px;\r\n");
      out.write("	}\r\n");
      out.write("	td.title{\r\n");
      out.write("		text-align: right;\r\n");
      out.write("		background-color:ivory;\r\n");
      out.write("		font-weight:bold;\r\n");
      out.write("		color:#FF6600;\r\n");
      out.write("		padding:0 10px;\r\n");
      out.write("	}\r\n");
      out.write("	input[type=\"number\"]{\r\n");
      out.write("		text-align:right;\r\n");
      out.write("		width:50px;\r\n");
      out.write("		height:19px;\r\n");
      out.write("	}\r\n");
      out.write("	ul{\r\n");
      out.write("		list-style:none;\r\n");
      out.write("		padding:0 10px;\r\n");
      out.write("		margin:5px;\r\n");
      out.write("	}\r\n");
      out.write("	ul li{\r\n");
      out.write("		display:inline;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	window.onload=function(){\r\n");
      out.write("		let myForm = document.getElementById('myForm');\r\n");
      out.write("		//이벤트 연결\r\n");
      out.write("		myForm.onsubmit=function(){\r\n");
      out.write("			let c0 = document.getElementById('c0');\r\n");
      out.write("			if(c0.value==''){//0이 아닌 공백인 경우\r\n");
      out.write("				alert('짜장면의 수량을 입력하세요!');\r\n");
      out.write("				c0.value = 0;\r\n");
      out.write("				c0.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			let c1 = document.getElementById('c1');\r\n");
      out.write("			if(c1.value==''){\r\n");
      out.write("				alert('짬뽕의 수량을 입력하세요!');\r\n");
      out.write("				c1.value = 0;\r\n");
      out.write("				c1.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			let c2 = document.getElementById('c2');\r\n");
      out.write("			if(c2.value==''){\r\n");
      out.write("				alert('볶음밥의 수량을 입력하세요!');\r\n");
      out.write("				c2.value = 0;\r\n");
      out.write("				c2.focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			if(c0.value==0 && c1.value==0 && c2.value==0){\r\n");
      out.write("				alert('세가지 음식 중 하나는 꼭 주문해야 합니다.');\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		};\r\n");
      out.write("	};\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>주문서</h2>\r\n");
      out.write("<form action=\"s15_order.jsp\" method=\"post\" id=\"myForm\">\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td class=\"title\">식사류</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li>\r\n");
      out.write("						<label for=\"c0\">짜장면</label>\r\n");
      out.write("						<input type=\"number\" name=\"food_c0\"\r\n");
      out.write("						   id=\"c0\" min=\"0\" max=\"99\" value=\"0\">\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<label for=\"c1\">짬뽕</label>\r\n");
      out.write("						<input type=\"number\" name=\"food_c1\"\r\n");
      out.write("						   id=\"c1\" min=\"0\" max=\"99\" value=\"0\">\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<label for=\"c2\">볶음밥</label>\r\n");
      out.write("						<input type=\"number\" name=\"food_c2\"\r\n");
      out.write("						   id=\"c2\" min=\"0\" max=\"99\" value=\"0\">\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr align=\"center\">\r\n");
      out.write("			<td colspan=\"2\">\r\n");
      out.write("				<input type=\"submit\" value=\"전송\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
